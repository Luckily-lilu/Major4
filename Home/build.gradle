if (isNeedHomeMoudle.toBoolean()) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}

def projeInfo = rootProject.ext.android
def libInfo = rootProject.ext.dependencies

android {
    compileSdkVersion projeInfo.compileSdkVersion
    buildToolsVersion projeInfo.buildToolsVersion

    defaultConfig {

        minSdkVersion projeInfo.minSdkVersion
        targetSdkVersion projeInfo.targetSdkVersion
        versionCode projeInfo.versionCode
        versionName projeInfo.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets{
        main {
            if (isNeedHomeMoudle.toBoolean()) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    libInfo.appcompa
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    annotationProcessor libInfo.aroutercompiler
    implementation project(path: ':Common')
}
